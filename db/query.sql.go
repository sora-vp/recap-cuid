// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"
)

const getSpecificParticipant = `-- name: GetSpecificParticipant :one
SELECT name, subpart FROM participants
WHERE cuid = ?
`

type GetSpecificParticipantRow struct {
	Name    string
	Subpart string
}

func (q *Queries) GetSpecificParticipant(ctx context.Context, cuid string) (GetSpecificParticipantRow, error) {
	row := q.db.QueryRowContext(ctx, getSpecificParticipant, cuid)
	var i GetSpecificParticipantRow
	err := row.Scan(&i.Name, &i.Subpart)
	return i, err
}

const insertNewParticipant = `-- name: InsertNewParticipant :exec
INSERT INTO participants (cuid, name, subpart) VALUES (?, ?, ?)
`

type InsertNewParticipantParams struct {
	Cuid    string
	Name    string
	Subpart string
}

func (q *Queries) InsertNewParticipant(ctx context.Context, arg InsertNewParticipantParams) error {
	_, err := q.db.ExecContext(ctx, insertNewParticipant, arg.Cuid, arg.Name, arg.Subpart)
	return err
}
